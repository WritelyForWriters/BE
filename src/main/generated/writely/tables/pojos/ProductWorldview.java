/*
 * This file is generated by jOOQ.
 */
package writely.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * 작품 세계관
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductWorldview implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final String geography;
    private final String history;
    private final String politics;
    private final String society;
    private final String religion;
    private final String economy;
    private final String technology;
    private final String lifestyle;
    private final String language;
    private final String culture;
    private final String species;
    private final String occupation;
    private final String conflict;
    private final LocalDateTime createdAt;
    private final UUID createdBy;
    private final LocalDateTime updatedAt;
    private final UUID updatedBy;

    public ProductWorldview(ProductWorldview value) {
        this.id = value.id;
        this.geography = value.geography;
        this.history = value.history;
        this.politics = value.politics;
        this.society = value.society;
        this.religion = value.religion;
        this.economy = value.economy;
        this.technology = value.technology;
        this.lifestyle = value.lifestyle;
        this.language = value.language;
        this.culture = value.culture;
        this.species = value.species;
        this.occupation = value.occupation;
        this.conflict = value.conflict;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public ProductWorldview(
        UUID id,
        String geography,
        String history,
        String politics,
        String society,
        String religion,
        String economy,
        String technology,
        String lifestyle,
        String language,
        String culture,
        String species,
        String occupation,
        String conflict,
        LocalDateTime createdAt,
        UUID createdBy,
        LocalDateTime updatedAt,
        UUID updatedBy
    ) {
        this.id = id;
        this.geography = geography;
        this.history = history;
        this.politics = politics;
        this.society = society;
        this.religion = religion;
        this.economy = economy;
        this.technology = technology;
        this.lifestyle = lifestyle;
        this.language = language;
        this.culture = culture;
        this.species = species;
        this.occupation = occupation;
        this.conflict = conflict;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.product_worldview.id</code>. 세계관 ID
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.product_worldview.geography</code>. 지리
     */
    public String getGeography() {
        return this.geography;
    }

    /**
     * Getter for <code>public.product_worldview.history</code>. 역사
     */
    public String getHistory() {
        return this.history;
    }

    /**
     * Getter for <code>public.product_worldview.politics</code>. 정치
     */
    public String getPolitics() {
        return this.politics;
    }

    /**
     * Getter for <code>public.product_worldview.society</code>. 사회
     */
    public String getSociety() {
        return this.society;
    }

    /**
     * Getter for <code>public.product_worldview.religion</code>. 종교
     */
    public String getReligion() {
        return this.religion;
    }

    /**
     * Getter for <code>public.product_worldview.economy</code>. 경제
     */
    public String getEconomy() {
        return this.economy;
    }

    /**
     * Getter for <code>public.product_worldview.technology</code>. 기술
     */
    public String getTechnology() {
        return this.technology;
    }

    /**
     * Getter for <code>public.product_worldview.lifestyle</code>. 생활
     */
    public String getLifestyle() {
        return this.lifestyle;
    }

    /**
     * Getter for <code>public.product_worldview.language</code>. 언어
     */
    public String getLanguage() {
        return this.language;
    }

    /**
     * Getter for <code>public.product_worldview.culture</code>. 문화
     */
    public String getCulture() {
        return this.culture;
    }

    /**
     * Getter for <code>public.product_worldview.species</code>. 종족
     */
    public String getSpecies() {
        return this.species;
    }

    /**
     * Getter for <code>public.product_worldview.occupation</code>. 직업
     */
    public String getOccupation() {
        return this.occupation;
    }

    /**
     * Getter for <code>public.product_worldview.conflict</code>. 갈등 관계
     */
    public String getConflict() {
        return this.conflict;
    }

    /**
     * Getter for <code>public.product_worldview.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.product_worldview.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.product_worldview.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for <code>public.product_worldview.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductWorldview other = (ProductWorldview) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.geography == null) {
            if (other.geography != null)
                return false;
        }
        else if (!this.geography.equals(other.geography))
            return false;
        if (this.history == null) {
            if (other.history != null)
                return false;
        }
        else if (!this.history.equals(other.history))
            return false;
        if (this.politics == null) {
            if (other.politics != null)
                return false;
        }
        else if (!this.politics.equals(other.politics))
            return false;
        if (this.society == null) {
            if (other.society != null)
                return false;
        }
        else if (!this.society.equals(other.society))
            return false;
        if (this.religion == null) {
            if (other.religion != null)
                return false;
        }
        else if (!this.religion.equals(other.religion))
            return false;
        if (this.economy == null) {
            if (other.economy != null)
                return false;
        }
        else if (!this.economy.equals(other.economy))
            return false;
        if (this.technology == null) {
            if (other.technology != null)
                return false;
        }
        else if (!this.technology.equals(other.technology))
            return false;
        if (this.lifestyle == null) {
            if (other.lifestyle != null)
                return false;
        }
        else if (!this.lifestyle.equals(other.lifestyle))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        }
        else if (!this.language.equals(other.language))
            return false;
        if (this.culture == null) {
            if (other.culture != null)
                return false;
        }
        else if (!this.culture.equals(other.culture))
            return false;
        if (this.species == null) {
            if (other.species != null)
                return false;
        }
        else if (!this.species.equals(other.species))
            return false;
        if (this.occupation == null) {
            if (other.occupation != null)
                return false;
        }
        else if (!this.occupation.equals(other.occupation))
            return false;
        if (this.conflict == null) {
            if (other.conflict != null)
                return false;
        }
        else if (!this.conflict.equals(other.conflict))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.geography == null) ? 0 : this.geography.hashCode());
        result = prime * result + ((this.history == null) ? 0 : this.history.hashCode());
        result = prime * result + ((this.politics == null) ? 0 : this.politics.hashCode());
        result = prime * result + ((this.society == null) ? 0 : this.society.hashCode());
        result = prime * result + ((this.religion == null) ? 0 : this.religion.hashCode());
        result = prime * result + ((this.economy == null) ? 0 : this.economy.hashCode());
        result = prime * result + ((this.technology == null) ? 0 : this.technology.hashCode());
        result = prime * result + ((this.lifestyle == null) ? 0 : this.lifestyle.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.culture == null) ? 0 : this.culture.hashCode());
        result = prime * result + ((this.species == null) ? 0 : this.species.hashCode());
        result = prime * result + ((this.occupation == null) ? 0 : this.occupation.hashCode());
        result = prime * result + ((this.conflict == null) ? 0 : this.conflict.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductWorldview (");

        sb.append(id);
        sb.append(", ").append(geography);
        sb.append(", ").append(history);
        sb.append(", ").append(politics);
        sb.append(", ").append(society);
        sb.append(", ").append(religion);
        sb.append(", ").append(economy);
        sb.append(", ").append(technology);
        sb.append(", ").append(lifestyle);
        sb.append(", ").append(language);
        sb.append(", ").append(culture);
        sb.append(", ").append(species);
        sb.append(", ").append(occupation);
        sb.append(", ").append(conflict);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}

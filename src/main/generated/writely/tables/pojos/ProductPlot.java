/*
 * This file is generated by jOOQ.
 */
package writely.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * 작품 줄거리
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductPlot implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final String exposition;
    private final String complication;
    private final String climax;
    private final String resolution;
    private final LocalDateTime createdAt;
    private final UUID createdBy;
    private final LocalDateTime updatedAt;
    private final UUID updatedBy;

    public ProductPlot(ProductPlot value) {
        this.id = value.id;
        this.exposition = value.exposition;
        this.complication = value.complication;
        this.climax = value.climax;
        this.resolution = value.resolution;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public ProductPlot(
        UUID id,
        String exposition,
        String complication,
        String climax,
        String resolution,
        LocalDateTime createdAt,
        UUID createdBy,
        LocalDateTime updatedAt,
        UUID updatedBy
    ) {
        this.id = id;
        this.exposition = exposition;
        this.complication = complication;
        this.climax = climax;
        this.resolution = resolution;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.product_plot.id</code>. 줄거리 ID
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.product_plot.exposition</code>. 발단
     */
    public String getExposition() {
        return this.exposition;
    }

    /**
     * Getter for <code>public.product_plot.complication</code>. 전개
     */
    public String getComplication() {
        return this.complication;
    }

    /**
     * Getter for <code>public.product_plot.climax</code>. 결말
     */
    public String getClimax() {
        return this.climax;
    }

    /**
     * Getter for <code>public.product_plot.resolution</code>.
     */
    public String getResolution() {
        return this.resolution;
    }

    /**
     * Getter for <code>public.product_plot.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.product_plot.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.product_plot.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for <code>public.product_plot.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductPlot other = (ProductPlot) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.exposition == null) {
            if (other.exposition != null)
                return false;
        }
        else if (!this.exposition.equals(other.exposition))
            return false;
        if (this.complication == null) {
            if (other.complication != null)
                return false;
        }
        else if (!this.complication.equals(other.complication))
            return false;
        if (this.climax == null) {
            if (other.climax != null)
                return false;
        }
        else if (!this.climax.equals(other.climax))
            return false;
        if (this.resolution == null) {
            if (other.resolution != null)
                return false;
        }
        else if (!this.resolution.equals(other.resolution))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.exposition == null) ? 0 : this.exposition.hashCode());
        result = prime * result + ((this.complication == null) ? 0 : this.complication.hashCode());
        result = prime * result + ((this.climax == null) ? 0 : this.climax.hashCode());
        result = prime * result + ((this.resolution == null) ? 0 : this.resolution.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductPlot (");

        sb.append(id);
        sb.append(", ").append(exposition);
        sb.append(", ").append(complication);
        sb.append(", ").append(climax);
        sb.append(", ").append(resolution);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}

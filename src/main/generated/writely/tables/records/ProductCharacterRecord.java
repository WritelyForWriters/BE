/*
 * This file is generated by jOOQ.
 */
package writely.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writely.tables.ProductCharacter;


/**
 * 작품 등장인물
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductCharacterRecord extends UpdatableRecordImpl<ProductCharacterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_character.id</code>. 등장인물 ID
     */
    public ProductCharacterRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.id</code>. 등장인물 ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.product_character.product_id</code>. 작품 ID
     */
    public ProductCharacterRecord setProductId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.product_id</code>. 작품 ID
     */
    public UUID getProductId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.product_character.intro</code>. 소개
     */
    public ProductCharacterRecord setIntro(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.intro</code>. 소개
     */
    public String getIntro() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product_character.name</code>. 이름
     */
    public ProductCharacterRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.name</code>. 이름
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.product_character.age</code>. 나이
     */
    public ProductCharacterRecord setAge(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.age</code>. 나이
     */
    public Integer getAge() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.product_character.gender</code>. 성별
     */
    public ProductCharacterRecord setGender(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.gender</code>. 성별
     */
    public String getGender() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.product_character.occupation</code>. 직업
     */
    public ProductCharacterRecord setOccupation(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.occupation</code>. 직업
     */
    public String getOccupation() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.product_character.appearance</code>. 외모
     */
    public ProductCharacterRecord setAppearance(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.appearance</code>. 외모
     */
    public String getAppearance() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.product_character.personality</code>. 성격
     */
    public ProductCharacterRecord setPersonality(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.personality</code>. 성격
     */
    public String getPersonality() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.product_character.characteristic</code>. 특징
     */
    public ProductCharacterRecord setCharacteristic(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.characteristic</code>. 특징
     */
    public String getCharacteristic() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.product_character.relationship</code>. 주요 관계
     */
    public ProductCharacterRecord setRelationship(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.relationship</code>. 주요 관계
     */
    public String getRelationship() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.product_character.created_at</code>. 생성일시
     */
    public ProductCharacterRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>public.product_character.created_by</code>. 생성자 ID
     */
    public ProductCharacterRecord setCreatedBy(UUID value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return (UUID) get(12);
    }

    /**
     * Setter for <code>public.product_character.updated_at</code>. 수정일시
     */
    public ProductCharacterRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.product_character.updated_by</code>. 수정자 ID
     */
    public ProductCharacterRecord setUpdatedBy(UUID value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.product_character.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return (UUID) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductCharacterRecord
     */
    public ProductCharacterRecord() {
        super(ProductCharacter.PRODUCT_CHARACTER);
    }

    /**
     * Create a detached, initialised ProductCharacterRecord
     */
    public ProductCharacterRecord(UUID id, UUID productId, String intro, String name, Integer age, String gender, String occupation, String appearance, String personality, String characteristic, String relationship, LocalDateTime createdAt, UUID createdBy, LocalDateTime updatedAt, UUID updatedBy) {
        super(ProductCharacter.PRODUCT_CHARACTER);

        setId(id);
        setProductId(productId);
        setIntro(intro);
        setName(name);
        setAge(age);
        setGender(gender);
        setOccupation(occupation);
        setAppearance(appearance);
        setPersonality(personality);
        setCharacteristic(characteristic);
        setRelationship(relationship);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductCharacterRecord
     */
    public ProductCharacterRecord(writely.tables.pojos.ProductCharacter value) {
        super(ProductCharacter.PRODUCT_CHARACTER);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setIntro(value.getIntro());
            setName(value.getName());
            setAge(value.getAge());
            setGender(value.getGender());
            setOccupation(value.getOccupation());
            setAppearance(value.getAppearance());
            setPersonality(value.getPersonality());
            setCharacteristic(value.getCharacteristic());
            setRelationship(value.getRelationship());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }
}

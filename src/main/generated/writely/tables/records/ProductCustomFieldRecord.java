/*
 * This file is generated by jOOQ.
 */
package writely.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writely.tables.ProductCustomField;


/**
 * 작품 커스텀 필드
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductCustomFieldRecord extends UpdatableRecordImpl<ProductCustomFieldRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_custom_field.id</code>. 커스텀 필드 ID
     */
    public ProductCustomFieldRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.id</code>. 커스텀 필드 ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.product_custom_field.product_id</code>. 작품 ID
     */
    public ProductCustomFieldRecord setProductId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.product_id</code>. 작품 ID
     */
    public UUID getProductId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.product_custom_field.section_code</code>. 섹션 코드
     */
    public ProductCustomFieldRecord setSectionCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.section_code</code>. 섹션 코드
     */
    public String getSectionCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product_custom_field.name</code>. 이름
     */
    public ProductCustomFieldRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.name</code>. 이름
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.product_custom_field.content</code>. 내용
     */
    public ProductCustomFieldRecord setContent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.content</code>. 내용
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.product_custom_field.seq</code>. 순서
     */
    public ProductCustomFieldRecord setSeq(Short value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.seq</code>. 순서
     */
    public Short getSeq() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>public.product_custom_field.created_at</code>. 생성일시
     */
    public ProductCustomFieldRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.product_custom_field.created_by</code>. 생성자 ID
     */
    public ProductCustomFieldRecord setCreatedBy(UUID value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return (UUID) get(7);
    }

    /**
     * Setter for <code>public.product_custom_field.updated_at</code>. 수정일시
     */
    public ProductCustomFieldRecord setUpdatedAt(LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.product_custom_field.updated_by</code>. 수정자 ID
     */
    public ProductCustomFieldRecord setUpdatedBy(UUID value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.product_custom_field.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return (UUID) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductCustomFieldRecord
     */
    public ProductCustomFieldRecord() {
        super(ProductCustomField.PRODUCT_CUSTOM_FIELD);
    }

    /**
     * Create a detached, initialised ProductCustomFieldRecord
     */
    public ProductCustomFieldRecord(UUID id, UUID productId, String sectionCode, String name, String content, Short seq, LocalDateTime createdAt, UUID createdBy, LocalDateTime updatedAt, UUID updatedBy) {
        super(ProductCustomField.PRODUCT_CUSTOM_FIELD);

        setId(id);
        setProductId(productId);
        setSectionCode(sectionCode);
        setName(name);
        setContent(content);
        setSeq(seq);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductCustomFieldRecord
     */
    public ProductCustomFieldRecord(writely.tables.pojos.ProductCustomField value) {
        super(ProductCustomField.PRODUCT_CUSTOM_FIELD);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setSectionCode(value.getSectionCode());
            setName(value.getName());
            setContent(value.getContent());
            setSeq(value.getSeq());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }
}

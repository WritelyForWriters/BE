/*
 * This file is generated by jOOQ.
 */
package writeon.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;

import writeon.tables.TermsAgreement;


/**
 * 약관_동의
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TermsAgreementRecord extends UpdatableRecordImpl<TermsAgreementRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.terms_agreement.terms_cd</code>. 약관 코드
     */
    public TermsAgreementRecord setTermsCd(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.terms_agreement.terms_cd</code>. 약관 코드
     */
    public String getTermsCd() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.terms_agreement.member_id</code>. 회원 ID
     */
    public TermsAgreementRecord setMemberId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.terms_agreement.member_id</code>. 회원 ID
     */
    public UUID getMemberId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.terms_agreement.created_at</code>.
     */
    public TermsAgreementRecord setCreatedAt(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.terms_agreement.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.terms_agreement.updated_at</code>.
     */
    public TermsAgreementRecord setUpdatedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.terms_agreement.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TermsAgreementRecord
     */
    public TermsAgreementRecord() {
        super(TermsAgreement.TERMS_AGREEMENT);
    }

    /**
     * Create a detached, initialised TermsAgreementRecord
     */
    public TermsAgreementRecord(String termsCd, UUID memberId, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(TermsAgreement.TERMS_AGREEMENT);

        setTermsCd(termsCd);
        setMemberId(memberId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TermsAgreementRecord
     */
    public TermsAgreementRecord(writeon.tables.pojos.TermsAgreement value) {
        super(TermsAgreement.TERMS_AGREEMENT);

        if (value != null) {
            setTermsCd(value.getTermsCd());
            setMemberId(value.getMemberId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}

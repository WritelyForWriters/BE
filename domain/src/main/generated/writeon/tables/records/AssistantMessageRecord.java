/*
 * This file is generated by jOOQ.
 */
package writeon.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writeon.tables.AssistantMessage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AssistantMessageRecord extends UpdatableRecordImpl<AssistantMessageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.assistant_message.id</code>.
     */
    public AssistantMessageRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.assistant_message.assistant_id</code>.
     */
    public AssistantMessageRecord setAssistantId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.assistant_id</code>.
     */
    public UUID getAssistantId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.assistant_message.role</code>.
     */
    public AssistantMessageRecord setRole(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.assistant_message.content</code>.
     */
    public AssistantMessageRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.assistant_message.prompt</code>.
     */
    public AssistantMessageRecord setPrompt(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.prompt</code>.
     */
    public String getPrompt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.assistant_message.created_at</code>.
     */
    public AssistantMessageRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.assistant_message.created_by</code>.
     */
    public AssistantMessageRecord setCreatedBy(UUID value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.assistant_message.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssistantMessageRecord
     */
    public AssistantMessageRecord() {
        super(AssistantMessage.ASSISTANT_MESSAGE);
    }

    /**
     * Create a detached, initialised AssistantMessageRecord
     */
    public AssistantMessageRecord(UUID id, UUID assistantId, String role, String content, String prompt, LocalDateTime createdAt, UUID createdBy) {
        super(AssistantMessage.ASSISTANT_MESSAGE);

        setId(id);
        setAssistantId(assistantId);
        setRole(role);
        setContent(content);
        setPrompt(prompt);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AssistantMessageRecord
     */
    public AssistantMessageRecord(writeon.tables.pojos.AssistantMessage value) {
        super(AssistantMessage.ASSISTANT_MESSAGE);

        if (value != null) {
            setId(value.getId());
            setAssistantId(value.getAssistantId());
            setRole(value.getRole());
            setContent(value.getContent());
            setPrompt(value.getPrompt());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            resetChangedOnNotNull();
        }
    }
}

/*
 * This file is generated by jOOQ.
 */
package writeon.tables.records;


import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writeon.tables.ProductFixedMessage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductFixedMessageRecord extends UpdatableRecordImpl<ProductFixedMessageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product_fixed_message.product_id</code>.
     */
    public ProductFixedMessageRecord setProductId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product_fixed_message.product_id</code>.
     */
    public UUID getProductId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.product_fixed_message.message_id</code>.
     */
    public ProductFixedMessageRecord setMessageId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product_fixed_message.message_id</code>.
     */
    public UUID getMessageId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductFixedMessageRecord
     */
    public ProductFixedMessageRecord() {
        super(ProductFixedMessage.PRODUCT_FIXED_MESSAGE);
    }

    /**
     * Create a detached, initialised ProductFixedMessageRecord
     */
    public ProductFixedMessageRecord(UUID productId, UUID messageId) {
        super(ProductFixedMessage.PRODUCT_FIXED_MESSAGE);

        setProductId(productId);
        setMessageId(messageId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductFixedMessageRecord
     */
    public ProductFixedMessageRecord(writeon.tables.pojos.ProductFixedMessage value) {
        super(ProductFixedMessage.PRODUCT_FIXED_MESSAGE);

        if (value != null) {
            setProductId(value.getProductId());
            setMessageId(value.getMessageId());
            resetChangedOnNotNull();
        }
    }
}

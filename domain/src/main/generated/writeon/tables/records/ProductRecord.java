/*
 * This file is generated by jOOQ.
 */
package writeon.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writeon.tables.Product;


/**
 * 작품
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.product.id</code>. 작품 ID
     */
    public ProductRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.product.id</code>. 작품 ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.product.title</code>. 제목
     */
    public ProductRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.product.title</code>. 제목
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.product.content</code>. 내용
     */
    public ProductRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.product.content</code>. 내용
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.product.created_at</code>. 생성일시
     */
    public ProductRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.product.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.product.created_by</code>. 생성자 ID
     */
    public ProductRecord setCreatedBy(UUID value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.product.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.product.updated_at</code>. 수정일시
     */
    public ProductRecord setUpdatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.product.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.product.updated_by</code>. 수정자 ID
     */
    public ProductRecord setUpdatedBy(UUID value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.product.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(UUID id, String title, String content, LocalDateTime createdAt, UUID createdBy, LocalDateTime updatedAt, UUID updatedBy) {
        super(Product.PRODUCT);

        setId(id);
        setTitle(title);
        setContent(content);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(writeon.tables.pojos.Product value) {
        super(Product.PRODUCT);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setContent(value.getContent());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }
}

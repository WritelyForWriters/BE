/*
 * This file is generated by jOOQ.
 */
package writeon.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductFavoritePrompt implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID productId;
    private final String prompt;
    private final LocalDateTime createdAt;

    public ProductFavoritePrompt(ProductFavoritePrompt value) {
        this.id = value.id;
        this.productId = value.productId;
        this.prompt = value.prompt;
        this.createdAt = value.createdAt;
    }

    public ProductFavoritePrompt(
        UUID id,
        UUID productId,
        String prompt,
        LocalDateTime createdAt
    ) {
        this.id = id;
        this.productId = productId;
        this.prompt = prompt;
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.product_favorite_prompt.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.product_favorite_prompt.product_id</code>.
     */
    public UUID getProductId() {
        return this.productId;
    }

    /**
     * Getter for <code>public.product_favorite_prompt.prompt</code>.
     */
    public String getPrompt() {
        return this.prompt;
    }

    /**
     * Getter for <code>public.product_favorite_prompt.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductFavoritePrompt other = (ProductFavoritePrompt) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.prompt == null) {
            if (other.prompt != null)
                return false;
        }
        else if (!this.prompt.equals(other.prompt))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.prompt == null) ? 0 : this.prompt.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductFavoritePrompt (");

        sb.append(id);
        sb.append(", ").append(productId);
        sb.append(", ").append(prompt);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }
}

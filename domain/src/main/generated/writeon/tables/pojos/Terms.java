/*
 * This file is generated by jOOQ.
 */
package writeon.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * 약관
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Terms implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final String cd;
    private final Integer version;
    private final String title;
    private final String content;
    private final Boolean isRequired;
    private final OffsetDateTime createdAt;
    private final OffsetDateTime updatedAt;

    public Terms(Terms value) {
        this.id = value.id;
        this.cd = value.cd;
        this.version = value.version;
        this.title = value.title;
        this.content = value.content;
        this.isRequired = value.isRequired;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Terms(
        UUID id,
        String cd,
        Integer version,
        String title,
        String content,
        Boolean isRequired,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.id = id;
        this.cd = cd;
        this.version = version;
        this.title = title;
        this.content = content;
        this.isRequired = isRequired;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.terms.id</code>. 약관 ID
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.terms.cd</code>. 약관 코드
     */
    public String getCd() {
        return this.cd;
    }

    /**
     * Getter for <code>public.terms.version</code>. 약관 버전
     */
    public Integer getVersion() {
        return this.version;
    }

    /**
     * Getter for <code>public.terms.title</code>. 약관 제목
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>public.terms.content</code>. 약관 내용
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Getter for <code>public.terms.is_required</code>. 동의 필수 여부
     */
    public Boolean getIsRequired() {
        return this.isRequired;
    }

    /**
     * Getter for <code>public.terms.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.terms.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Terms other = (Terms) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.cd == null) {
            if (other.cd != null)
                return false;
        }
        else if (!this.cd.equals(other.cd))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.isRequired == null) {
            if (other.isRequired != null)
                return false;
        }
        else if (!this.isRequired.equals(other.isRequired))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.cd == null) ? 0 : this.cd.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.isRequired == null) ? 0 : this.isRequired.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Terms (");

        sb.append(id);
        sb.append(", ").append(cd);
        sb.append(", ").append(version);
        sb.append(", ").append(title);
        sb.append(", ").append(content);
        sb.append(", ").append(isRequired);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}

/*
 * This file is generated by jOOQ.
 */
package writeon.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Assistant implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID productId;
    private final String type;
    private final String status;
    private final Boolean isApplied;
    private final LocalDateTime createdAt;
    private final UUID createdBy;
    private final LocalDateTime updatedAt;

    public Assistant(Assistant value) {
        this.id = value.id;
        this.productId = value.productId;
        this.type = value.type;
        this.status = value.status;
        this.isApplied = value.isApplied;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
    }

    public Assistant(
        UUID id,
        UUID productId,
        String type,
        String status,
        Boolean isApplied,
        LocalDateTime createdAt,
        UUID createdBy,
        LocalDateTime updatedAt
    ) {
        this.id = id;
        this.productId = productId;
        this.type = type;
        this.status = status;
        this.isApplied = isApplied;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.assistant.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.assistant.product_id</code>.
     */
    public UUID getProductId() {
        return this.productId;
    }

    /**
     * Getter for <code>public.assistant.type</code>.
     */
    public String getType() {
        return this.type;
    }

    /**
     * Getter for <code>public.assistant.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.assistant.is_applied</code>.
     */
    public Boolean getIsApplied() {
        return this.isApplied;
    }

    /**
     * Getter for <code>public.assistant.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.assistant.created_by</code>.
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.assistant.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Assistant other = (Assistant) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.isApplied == null) {
            if (other.isApplied != null)
                return false;
        }
        else if (!this.isApplied.equals(other.isApplied))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.isApplied == null) ? 0 : this.isApplied.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Assistant (");

        sb.append(id);
        sb.append(", ").append(productId);
        sb.append(", ").append(type);
        sb.append(", ").append(status);
        sb.append(", ").append(isApplied);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}

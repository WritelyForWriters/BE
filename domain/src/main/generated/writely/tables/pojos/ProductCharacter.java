/*
 * This file is generated by jOOQ.
 */
package writely.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.UUID;


/**
 * 작품 등장인물
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductCharacter implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID productId;
    private final String intro;
    private final String name;
    private final Integer age;
    private final String gender;
    private final String occupation;
    private final String appearance;
    private final String personality;
    private final String characteristic;
    private final String relationship;
    private final LocalDateTime createdAt;
    private final UUID createdBy;
    private final LocalDateTime updatedAt;
    private final UUID updatedBy;

    public ProductCharacter(ProductCharacter value) {
        this.id = value.id;
        this.productId = value.productId;
        this.intro = value.intro;
        this.name = value.name;
        this.age = value.age;
        this.gender = value.gender;
        this.occupation = value.occupation;
        this.appearance = value.appearance;
        this.personality = value.personality;
        this.characteristic = value.characteristic;
        this.relationship = value.relationship;
        this.createdAt = value.createdAt;
        this.createdBy = value.createdBy;
        this.updatedAt = value.updatedAt;
        this.updatedBy = value.updatedBy;
    }

    public ProductCharacter(
        UUID id,
        UUID productId,
        String intro,
        String name,
        Integer age,
        String gender,
        String occupation,
        String appearance,
        String personality,
        String characteristic,
        String relationship,
        LocalDateTime createdAt,
        UUID createdBy,
        LocalDateTime updatedAt,
        UUID updatedBy
    ) {
        this.id = id;
        this.productId = productId;
        this.intro = intro;
        this.name = name;
        this.age = age;
        this.gender = gender;
        this.occupation = occupation;
        this.appearance = appearance;
        this.personality = personality;
        this.characteristic = characteristic;
        this.relationship = relationship;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    /**
     * Getter for <code>public.product_character.id</code>. 등장인물 ID
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.product_character.product_id</code>. 작품 ID
     */
    public UUID getProductId() {
        return this.productId;
    }

    /**
     * Getter for <code>public.product_character.intro</code>. 소개
     */
    public String getIntro() {
        return this.intro;
    }

    /**
     * Getter for <code>public.product_character.name</code>. 이름
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.product_character.age</code>. 나이
     */
    public Integer getAge() {
        return this.age;
    }

    /**
     * Getter for <code>public.product_character.gender</code>. 성별
     */
    public String getGender() {
        return this.gender;
    }

    /**
     * Getter for <code>public.product_character.occupation</code>. 직업
     */
    public String getOccupation() {
        return this.occupation;
    }

    /**
     * Getter for <code>public.product_character.appearance</code>. 외모
     */
    public String getAppearance() {
        return this.appearance;
    }

    /**
     * Getter for <code>public.product_character.personality</code>. 성격
     */
    public String getPersonality() {
        return this.personality;
    }

    /**
     * Getter for <code>public.product_character.characteristic</code>. 특징
     */
    public String getCharacteristic() {
        return this.characteristic;
    }

    /**
     * Getter for <code>public.product_character.relationship</code>. 주요 관계
     */
    public String getRelationship() {
        return this.relationship;
    }

    /**
     * Getter for <code>public.product_character.created_at</code>. 생성일시
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.product_character.created_by</code>. 생성자 ID
     */
    public UUID getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Getter for <code>public.product_character.updated_at</code>. 수정일시
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for <code>public.product_character.updated_by</code>. 수정자 ID
     */
    public UUID getUpdatedBy() {
        return this.updatedBy;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductCharacter other = (ProductCharacter) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.intro == null) {
            if (other.intro != null)
                return false;
        }
        else if (!this.intro.equals(other.intro))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.age == null) {
            if (other.age != null)
                return false;
        }
        else if (!this.age.equals(other.age))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.occupation == null) {
            if (other.occupation != null)
                return false;
        }
        else if (!this.occupation.equals(other.occupation))
            return false;
        if (this.appearance == null) {
            if (other.appearance != null)
                return false;
        }
        else if (!this.appearance.equals(other.appearance))
            return false;
        if (this.personality == null) {
            if (other.personality != null)
                return false;
        }
        else if (!this.personality.equals(other.personality))
            return false;
        if (this.characteristic == null) {
            if (other.characteristic != null)
                return false;
        }
        else if (!this.characteristic.equals(other.characteristic))
            return false;
        if (this.relationship == null) {
            if (other.relationship != null)
                return false;
        }
        else if (!this.relationship.equals(other.relationship))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        }
        else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.intro == null) ? 0 : this.intro.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.occupation == null) ? 0 : this.occupation.hashCode());
        result = prime * result + ((this.appearance == null) ? 0 : this.appearance.hashCode());
        result = prime * result + ((this.personality == null) ? 0 : this.personality.hashCode());
        result = prime * result + ((this.characteristic == null) ? 0 : this.characteristic.hashCode());
        result = prime * result + ((this.relationship == null) ? 0 : this.relationship.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductCharacter (");

        sb.append(id);
        sb.append(", ").append(productId);
        sb.append(", ").append(intro);
        sb.append(", ").append(name);
        sb.append(", ").append(age);
        sb.append(", ").append(gender);
        sb.append(", ").append(occupation);
        sb.append(", ").append(appearance);
        sb.append(", ").append(personality);
        sb.append(", ").append(characteristic);
        sb.append(", ").append(relationship);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }
}

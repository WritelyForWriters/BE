/*
 * This file is generated by jOOQ.
 */
package writely.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writely.tables.Terms;


/**
 * 약관
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TermsRecord extends UpdatableRecordImpl<TermsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.terms.id</code>. 약관 ID
     */
    public TermsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.id</code>. 약관 ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.terms.cd</code>. 약관 코드
     */
    public TermsRecord setCd(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.cd</code>. 약관 코드
     */
    public String getCd() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.terms.version</code>. 약관 버전
     */
    public TermsRecord setVersion(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.version</code>. 약관 버전
     */
    public Integer getVersion() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.terms.title</code>. 약관 제목
     */
    public TermsRecord setTitle(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.title</code>. 약관 제목
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.terms.content</code>. 약관 내용
     */
    public TermsRecord setContent(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.content</code>. 약관 내용
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.terms.is_required</code>. 동의 필수 여부
     */
    public TermsRecord setIsRequired(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.is_required</code>. 동의 필수 여부
     */
    public Boolean getIsRequired() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.terms.created_at</code>.
     */
    public TermsRecord setCreatedAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.terms.updated_at</code>.
     */
    public TermsRecord setUpdatedAt(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.terms.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TermsRecord
     */
    public TermsRecord() {
        super(Terms.TERMS);
    }

    /**
     * Create a detached, initialised TermsRecord
     */
    public TermsRecord(UUID id, String cd, Integer version, String title, String content, Boolean isRequired, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Terms.TERMS);

        setId(id);
        setCd(cd);
        setVersion(version);
        setTitle(title);
        setContent(content);
        setIsRequired(isRequired);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TermsRecord
     */
    public TermsRecord(writely.tables.pojos.Terms value) {
        super(Terms.TERMS);

        if (value != null) {
            setId(value.getId());
            setCd(value.getCd());
            setVersion(value.getVersion());
            setTitle(value.getTitle());
            setContent(value.getContent());
            setIsRequired(value.getIsRequired());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}

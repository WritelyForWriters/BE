/*
 * This file is generated by jOOQ.
 */
package writely.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import writely.tables.ChatMessage;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChatMessageRecord extends UpdatableRecordImpl<ChatMessageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chat_message.id</code>.
     */
    public ChatMessageRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.chat_message.assistant_id</code>.
     */
    public ChatMessageRecord setAssistantId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.assistant_id</code>.
     */
    public UUID getAssistantId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.chat_message.role</code>.
     */
    public ChatMessageRecord setRole(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.chat_message.content</code>.
     */
    public ChatMessageRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.chat_message.prompt</code>.
     */
    public ChatMessageRecord setPrompt(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.prompt</code>.
     */
    public String getPrompt() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.chat_message.created_at</code>.
     */
    public ChatMessageRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.chat_message.created_by</code>.
     */
    public ChatMessageRecord setCreatedBy(UUID value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.created_by</code>.
     */
    public UUID getCreatedBy() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>public.chat_message.updated_at</code>.
     */
    public ChatMessageRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.chat_message.updated_by</code>.
     */
    public ChatMessageRecord setUpdatedBy(UUID value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_message.updated_by</code>.
     */
    public UUID getUpdatedBy() {
        return (UUID) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatMessageRecord
     */
    public ChatMessageRecord() {
        super(ChatMessage.CHAT_MESSAGE);
    }

    /**
     * Create a detached, initialised ChatMessageRecord
     */
    public ChatMessageRecord(UUID id, UUID assistantId, String role, String content, String prompt, LocalDateTime createdAt, UUID createdBy, LocalDateTime updatedAt, UUID updatedBy) {
        super(ChatMessage.CHAT_MESSAGE);

        setId(id);
        setAssistantId(assistantId);
        setRole(role);
        setContent(content);
        setPrompt(prompt);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatMessageRecord
     */
    public ChatMessageRecord(writely.tables.pojos.ChatMessage value) {
        super(ChatMessage.CHAT_MESSAGE);

        if (value != null) {
            setId(value.getId());
            setAssistantId(value.getAssistantId());
            setRole(value.getRole());
            setContent(value.getContent());
            setPrompt(value.getPrompt());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }
}
